trigger:
  branches:
    include:
      - dev
      - staging
      - master

pr:
  branches:
    include:
      - staging
      - master

variables:
  buildConfiguration: 'Release'

pool:
  name: agent1

stages:
# ---------------- STAGE 1: BUILD & DEPLOY TO DEV ----------------
- stage: Build_Dev
  displayName: 'Build & Deploy to Dev'
  jobs:
    - job: DevJob
      steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '8.0.x'

        - script: dotnet restore
          displayName: 'Restore Dependencies'

        - script: dotnet build --configuration $(buildConfiguration)
          displayName: 'Build Project'

        - script: dotnet test --no-build --verbosity normal
          displayName: 'Run Tests'

        - script: dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/output
          displayName: 'Publish App'

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/output'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/webapp.zip'
            replaceExistingArchive: true

        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: '$(Build.ArtifactStagingDirectory)/webapp.zip'
            artifactName: 'drop'

        - task: AzureWebApp@1
          inputs:
            azureSubscription: 'azureconnection1'
            appType: 'webApp'
            appName: 'webappDev2'
            package: '$(Build.ArtifactStagingDirectory)/output'

# ---------------- STAGE 2: DEPLOY TO STAGING ----------------
- stage: Deploy_Staging
  displayName: 'Deploy to Staging'
  dependsOn: Build_Dev
  jobs:
    - deployment: DeployStaging
      environment: 'staging'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  artifactName: 'drop'
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azureconnection1'
                  appType: 'webApp'
                  appName: 'webApp-Staging2'
                  package: '$(Pipeline.Workspace)/drop/webapp.zip'

# ---------------- STAGE 3: DEPLOY TO PROD ----------------
- stage: Deploy_Prod
  displayName: 'Deploy to Production'
  dependsOn: Deploy_Staging
  jobs:
    - deployment: DeployProd
      environment: 'prod'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@0
                inputs:
                  artifactName: 'drop'
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: 'azureconnection1'
                  appType: 'webApp'
                  appName: 'webappProd2'
                  package: '$(Pipeline.Workspace)/drop/webapp.zip'
